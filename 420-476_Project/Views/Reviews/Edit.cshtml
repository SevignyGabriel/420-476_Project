@model _420_476_Project.Models.Reviews

@{
    ViewBag.Title = "Edit";
    if (Session["loggedIn"] != null)
    {
        if ((bool)Session["loggedIn"])
        {
            var userLoggedIn = Session["userLoggedIn"] as _420_476_Project.Models.Users;
            switch (userLoggedIn.RoleID)
            {
                case 1:
                    Layout = "~/Views/Shared/_LoggedIn.cshtml";
                    break;
                case 2:
                    Layout = "~/Views/Shared/_Moderator.cshtml";
                    break;
                case 3:
                    Layout = "~/Views/Shared/_Admin.cshtml";
                    break;
                default:
                    Layout = "~/Views/Shared/_LoggedIn.cshtml";
                    break;
            }
        }
    }
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Review</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ReviewID)

        <div class="form-group">
            @Html.LabelFor(model => model.Score, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Score, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Score, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserLogin, "UserLogin", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UserLogin", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserLogin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
